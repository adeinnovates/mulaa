{"remainingRequest":"/Users/samsonaligba/Sites/mulaa.co/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/samsonaligba/Sites/mulaa.co/src/App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/samsonaligba/Sites/mulaa.co/src/App.vue","mtime":1571946601238},{"path":"/Users/samsonaligba/Sites/mulaa.co/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/samsonaligba/Sites/mulaa.co/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/samsonaligba/Sites/mulaa.co/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/samsonaligba/Sites/mulaa.co/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/Users/samsonaligba/Sites/mulaa.co/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/samsonaligba/Sites/mulaa.co/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import \"https://cdn.jsdelivr.net/npm/animate.css@3.5.1\";\n.page {\n   /*position: fixed;*/\n   width: inherit;\n }\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyGA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <v-app>\n    \n    <Navbar v-if=\"!$route.meta.hideNavigation\"/>\n\n    <v-content v-if=\"$route.path == '/user'\" class=\"mb-0 pa-0 dark-theme\">\n    <transition name=\"router-anim\" enter-active-class=\"animated fadeInDown\" leave-active-class=\"animated fadeOutDown\" mode=\"out-in\">\n      <router-view></router-view>\n      </transition>\n    </v-content>\n    <v-content v-else-if=\"$route.path == '/onboard'\" class=\"mb-0 pa-0 dark-theme\">\n    <transition name=\"router-anim\" enter-active-class=\"animated fadeInDown\" leave-active-class=\"animated fadeOutDown\" mode=\"out-in\">\n      <router-view></router-view>\n      </transition>\n    </v-content>\n    <v-content v-else class=\"mb-0 pa-0\">\n      <transition name=\"router-anim\" enter-active-class=\"animated fadeInDown\" leave-active-class=\"animated fadeOutDown\" mode=\"out-in\">\n      <router-view></router-view>\n      </transition>\n    </v-content>\n\n<v-snackbar\n        v-model=\"snackWithButtons\"\n        :timeout=\"timeout\"\n        bottom\n        left\n        class=\"snack\"\n      >\n        {{ snackWithBtnText }}\n        <v-spacer />\n        <v-btn\n          dark\n          flat\n          color=\"#00f500\"\n          @click.native=\"refreshApp\"\n        >\n          {{ snackBtnText }}\n        </v-btn>\n        <v-btn\n          icon\n          @click=\"snackWithButtons = false\"\n        >\n          <v-icon>close</v-icon>\n        </v-btn>\n      </v-snackbar>\n\n  </v-app>\n</template>\n\n<script>\nimport HelloWorld from './components/HelloWorld';\nimport Navbar from '@/components/Navbar'\n\nexport default {\n  name: 'App',\n  components: {\n     Navbar,\n  },\n  data: () => ({\n    //\n    theme: 'dark-theme',\n    refreshing: false,\n      registration: null,\n      snackBtnText: '',\n      snackWithBtnText: '',\n      snackWithButtons: false,\n      timeout: 0,\n  }),\n   created(){\n     /*if (this.$store.getters.isLoggedIn != true){\n       //this.$router.push(\"/user\");\n     }*/\n     document.addEventListener(\n    'swUpdated', this.showRefreshUI, { once: true }\n  );\n  navigator.serviceWorker.addEventListener(\n    'controllerchange', () => {\n      if (this.refreshing) return;\n      this.refreshing = true;\n      window.location.reload();\n    }\n  );\n    },\n\n    methods: {\n    showRefreshUI(e) {\n      // Display a snackbar inviting the user to refresh/reload the app due\n      // to an app update being available.\n      // The new service worker is installed, but not yet active.\n      // Store the ServiceWorkerRegistration instance for later use.\n      this.registration = e.detail;\n      this.snackBtnText = 'Refresh';\n      this.snackWithBtnText = 'New version available!';\n      this.snackWithButtons = true;\n    },\n    refreshApp() {\n      this.snackWithButtons = false;\n      // Protect against missing registration.waiting.\n      if (!this.registration || !this.registration.waiting) { return; }\n      this.registration.waiting.postMessage('skipWaiting');\n    },\n  },\n};\n</script>\n<style>\n @import \"https://cdn.jsdelivr.net/npm/animate.css@3.5.1\";\n .page {\n    /*position: fixed;*/\n    width: inherit;\n  }\n</style>"]}]}