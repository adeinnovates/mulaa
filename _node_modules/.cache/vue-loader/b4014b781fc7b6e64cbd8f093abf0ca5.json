{"remainingRequest":"/Users/samsonaligba/Sites/mulaa.co/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/samsonaligba/Sites/mulaa.co/src/views/ConfirmSub.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/samsonaligba/Sites/mulaa.co/src/views/ConfirmSub.vue","mtime":1579783816486},{"path":"/Users/samsonaligba/Sites/mulaa.co/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/Users/samsonaligba/Sites/mulaa.co/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/samsonaligba/Sites/mulaa.co/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState, mapGetters } from 'vuex'\n\nimport axios from 'axios'\nexport default {\n     data() {\n    return {\n        subOverlay:false,\n        infoMsg: '', \n        infoBar: false,\n        checkStatus:false,\n        checkURL: false,\n        planName:'',\n        paySuccess:false,\n        payError:false,\n        ErrorMsg:'',\n        skk: process.env.VUE_APP_SECRET_KEY,\n\n    }\n     },\n     created() {\n        return this.chkUrlData()\n    },\n     methods: {\n         goToSettings(){\n             this.$router.push('/settings')\n         },\nchkUrlData(){\n    if(this.$route.query.trxref != undefined){\n        //console.log(this.$route.query.trxref)\n        this.subOverlay = true\n        let tranx = this.$route.query.trxref\n        this.infoMsg = this.$route.query.trxref\n\n        //let skey = 'sk_live_01952d79b3b14815af91d560256959358299e123'\n        const config = {\n        headers: {'Authorization': 'Bearer '+this.skk}\n        }\n        axios.get('https://api.paystack.co/transaction/verify/'+tranx, config)\n        .then(resp => { \n            const trxData = resp.data.data\n           // const socialData = resp.data.socialCount\n            //console.log(resp.data.data)\n\n            if(trxData.status == 'success'){\n                this.paySuccess = true\n            let amount = trxData.plan_object.amount/100\n            let plan = trxData.plan_object.name\n            this.planName = trxData.plan_object.name\n            /*let plan_interval = tranx.plan_object.interval*/\n            let paidDate = trxData.paid_at\n            let cust_email = trxData.customer.email\n            let authorization = trxData.authorization.authorization_code\n\n            //console.log('data: '+amount+' / '+plan+' / '+cust_email+' / '+this.user)\n            let ts = new Date();\n            let nts = ts.toDateString()\n\n//console.log(ts.toDateString());\n\n                    this.$http.post('/subscription',\n                    {\n                    title: this.user, //+'_'+trxData.reference,\n                    fields : {\n                        date_created: nts,\n                    trans_ref: resp.data.data.reference,\n                    amount: amount,\n                    /*duration: plan_interval,*/\n                    plan_name: plan,\n                    authorization_code: authorization,\n                    user: this.user,\n                    },\n                    status: \"publish\"\n                    }\n                    ).then(response => {\n\n                        return this.$http.post('/users/'+this.userId, {\n                title: '',\n                content: '',\n                fields : {\n                    subscription: plan,\n                    subscription_package: plan,\n                    payment_date: nts,\n                    username: this.user,\n                    payment_ref: trxData.reference,\n                    paid_user: true\n                },\n                 status: \"publish\"\n            }).then(response2 => {\n                    this.subOverlay = false\n            })\n\n                    /*console.log('sub post: '+JSON.stringify(response.data))\n                    this.subOverlay = false\n                    */\n\n                    })\n                    \n           // console.log('this trnx was successful')\n            }else{\n                this.payError = true\n                this.ErrorMsg = trxData.status\n                this.subOverlay = false\n                //console.log(this.skk)\n                console.log('trnx abandonned')\n            }\n           \n            \n          })\n          .catch(err => {\n            //const linkData = 0\n            console.log(err)\n            //reject(err)\n          })\n            \n\n    //return this.confirmPayment()\n    }else{\n        console.log('empty string')\n    }\n    \n},\nconfirmPayment(id){\n//axios.get('http://localhost:8000/api/v1/f/', config)\n}\n     },\n     watch: {\n      planName () {\n          //console.log(this.planName)\n          return this.planName\n      },\n      ErrorMsg (){\n          return this.ErrorMsg\n      }\n     },\n     computed: {\n        ...mapGetters([\n             'renderUser'\n           ]),\n      ...mapState({\n      registerMsg:'registerMsg',\n      color:'color',\n      show:'show',\n      loading:'loading',\n      user: 'user',\n      userId:'userId',\n      allProducts: 'allProducts',\n      myproducts:'myproducts',\n      userPhone: 'userPhone',\n       userDetails: 'userDetails',\n       userAcctStatus: 'userAcctStatus'\n      }),\n    snackbar: {\n      get() {\n        return this.$store.state.snackbar;\n      },\n      set(value) {\n        this.$store.commit('snackbar', value);\n      }\n    }\n     }\n}\n",{"version":3,"sources":["ConfirmSub.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8DA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ConfirmSub.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div class=\"dashboard fill-height teal lighten-5 page pa-10 mt-10\">\n\n<v-card\nstyle=\"border-top-left-radius:15px;border-top-right-radius:15px;\"\nclass=\"my-5\"\noutlined\n>\n<v-card-title>\n      <span class=\"grey--text overline\">\n          Transaction <strong>{{infoMsg}}</strong>\n      </span>\n    </v-card-title>\n<v-card-text>\n    <v-sheet \n    v-show=\"paySuccess\"\n    class=\"pa-5\"\n    color=\"orange lighten-5\"\n    style=\"border:3px dotted rgba(178, 223, 219, 0.3);\n    border-radius:4px;\"\n    >\n    <p class=\"headline\">Payment Successful</p>\n    <p class=\"title grey--text\">\n    Mulaa Subscription to <span class=\"blue--text\">{{planName}}</span>, is now active. \n    </p>\n\n    <div class=\"text--primary\">\n    Return to settings page\n    </div>\n\n    </v-sheet>\n     <v-sheet \n    v-show=\"payError\"\n    class=\"pa-5\"\n    color=\"red lighten-5\"\n    style=\"border:3px dotted rgba(178, 223, 219, 0.3);\n    border-radius:4px;\"\n    >\n    <p class=\"headline\">Payment Unsuccessful</p>\n    <p class=\"title red--text\">\n        Transaction Response: {{ErrorMsg}}\n    </p>\n\n    <div class=\"text--primary\">\n    Return to settings page\n    </div>\n\n    </v-sheet>\n</v-card-text>\n<div class=\"my-2\">\n            <v-btn x-large block color=\"success\" dark @click=\"goToSettings()\" class=\"my-3\">\n                Return to settings\n                </v-btn>\n          </div>\n</v-card>\n        <v-overlay :value=\"subOverlay\">\n            <p class=\"overline\">confiming...</p>\n      <v-progress-circular indeterminate size=\"84\"></v-progress-circular>\n    </v-overlay>\n    </div>\n</template>\n<script>\nimport { mapState, mapGetters } from 'vuex'\n\nimport axios from 'axios'\nexport default {\n     data() {\n    return {\n        subOverlay:false,\n        infoMsg: '', \n        infoBar: false,\n        checkStatus:false,\n        checkURL: false,\n        planName:'',\n        paySuccess:false,\n        payError:false,\n        ErrorMsg:'',\n        skk: process.env.VUE_APP_SECRET_KEY,\n\n    }\n     },\n     created() {\n        return this.chkUrlData()\n    },\n     methods: {\n         goToSettings(){\n             this.$router.push('/settings')\n         },\nchkUrlData(){\n    if(this.$route.query.trxref != undefined){\n        //console.log(this.$route.query.trxref)\n        this.subOverlay = true\n        let tranx = this.$route.query.trxref\n        this.infoMsg = this.$route.query.trxref\n\n        //let skey = 'sk_live_01952d79b3b14815af91d560256959358299e123'\n        const config = {\n        headers: {'Authorization': 'Bearer '+this.skk}\n        }\n        axios.get('https://api.paystack.co/transaction/verify/'+tranx, config)\n        .then(resp => { \n            const trxData = resp.data.data\n           // const socialData = resp.data.socialCount\n            //console.log(resp.data.data)\n\n            if(trxData.status == 'success'){\n                this.paySuccess = true\n            let amount = trxData.plan_object.amount/100\n            let plan = trxData.plan_object.name\n            this.planName = trxData.plan_object.name\n            /*let plan_interval = tranx.plan_object.interval*/\n            let paidDate = trxData.paid_at\n            let cust_email = trxData.customer.email\n            let authorization = trxData.authorization.authorization_code\n\n            //console.log('data: '+amount+' / '+plan+' / '+cust_email+' / '+this.user)\n            let ts = new Date();\n            let nts = ts.toDateString()\n\n//console.log(ts.toDateString());\n\n                    this.$http.post('/subscription',\n                    {\n                    title: this.user, //+'_'+trxData.reference,\n                    fields : {\n                        date_created: nts,\n                    trans_ref: resp.data.data.reference,\n                    amount: amount,\n                    /*duration: plan_interval,*/\n                    plan_name: plan,\n                    authorization_code: authorization,\n                    user: this.user,\n                    },\n                    status: \"publish\"\n                    }\n                    ).then(response => {\n\n                        return this.$http.post('/users/'+this.userId, {\n                title: '',\n                content: '',\n                fields : {\n                    subscription: plan,\n                    subscription_package: plan,\n                    payment_date: nts,\n                    username: this.user,\n                    payment_ref: trxData.reference,\n                    paid_user: true\n                },\n                 status: \"publish\"\n            }).then(response2 => {\n                    this.subOverlay = false\n            })\n\n                    /*console.log('sub post: '+JSON.stringify(response.data))\n                    this.subOverlay = false\n                    */\n\n                    })\n                    \n           // console.log('this trnx was successful')\n            }else{\n                this.payError = true\n                this.ErrorMsg = trxData.status\n                this.subOverlay = false\n                //console.log(this.skk)\n                console.log('trnx abandonned')\n            }\n           \n            \n          })\n          .catch(err => {\n            //const linkData = 0\n            console.log(err)\n            //reject(err)\n          })\n            \n\n    //return this.confirmPayment()\n    }else{\n        console.log('empty string')\n    }\n    \n},\nconfirmPayment(id){\n//axios.get('http://localhost:8000/api/v1/f/', config)\n}\n     },\n     watch: {\n      planName () {\n          //console.log(this.planName)\n          return this.planName\n      },\n      ErrorMsg (){\n          return this.ErrorMsg\n      }\n     },\n     computed: {\n        ...mapGetters([\n             'renderUser'\n           ]),\n      ...mapState({\n      registerMsg:'registerMsg',\n      color:'color',\n      show:'show',\n      loading:'loading',\n      user: 'user',\n      userId:'userId',\n      allProducts: 'allProducts',\n      myproducts:'myproducts',\n      userPhone: 'userPhone',\n       userDetails: 'userDetails',\n       userAcctStatus: 'userAcctStatus'\n      }),\n    snackbar: {\n      get() {\n        return this.$store.state.snackbar;\n      },\n      set(value) {\n        this.$store.commit('snackbar', value);\n      }\n    }\n     }\n}\n</script>"]}]}